#!/bin/bash

SSHD_CONFIG="/etc/ssh/sshd_config"

APPLY_TO=""
AUTH_CONFIG=""

if [ $# -ne 2 ]; then
  echo "Usage: authConfig <applyTo> <authConfig>"
  echo "  - <applyTo>     Methods to change. Possible values: 'ALL', method name"
  echo "  - <authConfig>  Authentication mechanism. Possible values: 'PASSWORD', 'PUBLIC_KEY'"

  exit 1
fi;

APPLY_TO=$1
shift;

AUTH_CONFIG=$1

ALL_METHODS=$(cat /etc/passwd | egrep '[0-9]:666:' | awk -F':' '{ print $1}')

# Spliting auth config to support several methods specification
IFS=',' read -r -a APPLY_METHODS <<< "${APPLY_TO}"

function updateSshdConfig() {
  METHOD=$1

  # If method already exists, that block is replaced
  local MATCH_LINE=$(grep -n "Match User $METHOD" ${SSHD_CONFIG} | cut -f1 -d:)
  if [ -z "${MATCH_LINE}" ]; then
    # If not it will be appended
    echo "Match User ${METHOD}" >> ${SSHD_CONFIG}
    MATCH_LINE=$(wc -l ${SSHD_CONFIG} | cut -f1 -d' ')
    echo "  #" >> ${SSHD_CONFIG}
    echo "  #" >> ${SSHD_CONFIG}
    echo "  #" >> ${SSHD_CONFIG}
    echo ""  >> ${SSHD_CONFIG}
  fi

  # Setting new match block
  case "${AUTH_CONFIG}" in 
    PASSWORD)
      sed -i "$((${MATCH_LINE} + 1))s@.*@  AuthenticationMethods password@" ${SSHD_CONFIG}
      sed -i "$((${MATCH_LINE} + 2))s@.*@  #@" ${SSHD_CONFIG}
      sed -i "$((${MATCH_LINE} + 3))s@.*@  #@" ${SSHD_CONFIG}
      ;;
    PUBLIC_KEY)
      sed -i "$((${MATCH_LINE} + 1))s@.*@  AuthenticationMethods publickey@" ${SSHD_CONFIG}
      sed -i "$((${MATCH_LINE} + 2))s@.*@  #@" ${SSHD_CONFIG}
      sed -i "$((${MATCH_LINE} + 3))s@.*@  #@" ${SSHD_CONFIG}
      ;;
  esac
}

LOCK_FILE="/tmp/authConfig.lock"
#Checking config lock
if [ -f ${LOCK_FILE} ]; then
    echo "Lock file (${LOCK_FILE}) preventing the config from being updated"
    exit 1;
else
    touch ${LOCK_FILE}
fi

# Check if ALL methods have been selected
if [ "$(echo ${APPLY_METHODS} | xargs)" == "ALL" ]; then
    echo "All methods auth config will be changed to ${AUTH_CONFIG}"
    echo "Methods: ${ALL_METHODS}"
    
    APPLY_METHODS=${ALL_METHODS};
fi;

for method in ${APPLY_METHODS}; do
  # Trimming
  typeset -l methodLower
  method=$(echo "${method}" | xargs)
  methodLower=$method
  if [ "${methodLower}" != "root" ] && [ "${methodLower}" != "sftp" ]; then
    if [ ${ALL_METHODS[${method}]} ]; then
        updateSshdConfig ${method}
    fi
  fi
done
#Releasing lock on config
rm ${LOCK_FILE}

#Apply new config
WRAPPER_DETECTED=$(ps -e -o "pid,command" | grep "/bin/bash /root/sshWrapper.sh" | grep -v "grep" | cut -f1 -d'/')
if [ -n "$WRAPPER_DETECTED" ]; then
    kill -s USR1 $WRAPPER_DETECTED
fi
